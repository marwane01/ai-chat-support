services:
  app:
    build:
      context: .
    env_file: .env
    depends_on:
      postgres:
        condition: service_started
      qdrant:
        condition: service_started
      redis:
        condition: service_started
      ollama:
        condition: service_started
    ports:
      - "8000:8000"
    volumes:
      - ./data:/app/data
    command: [ "uvicorn", "app.api.server:app", "--host", "0.0.0.0", "--port", "8000", "--no-server-header", "--proxy-headers" ]

  postgres:
    image: postgres:16
    container_name: chatbi-postgres
    environment:
      POSTGRES_DB: chatbi
      POSTGRES_USER: chatbi
      POSTGRES_PASSWORD: chatbi
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U chatbi -d chatbi" ]
      interval: 5s
      timeout: 3s
      retries: 20

  qdrant:
    image: qdrant/qdrant:latest
    container_name: chatbi-qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_storage:/qdrant/storage

  redis:
    image: redis:7-alpine
    container_name: chatbi-redis
    ports:
      - "6379:6379"

  # NEW: local LLM via Ollama
  ollama:
    image: ollama/ollama:latest
    container_name: chatbi-ollama
    restart: unless-stopped
    ports:
      - "11434:11434"
    environment:
      - OLLAMA_HOST=0.0.0.0:11434 # ensure it listens on all interfaces
    volumes:
      - ollama:/root/.ollama
    healthcheck:
      test: [ "CMD", "wget", "-qO-", "http://127.0.0.1:11434/v1/models" ]
      interval: 10s
      timeout: 5s
      retries: 10

  prometheus:
    image: prom/prometheus:latest
    container_name: chatbi-prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--web.enable-lifecycle"
    ports:
      - "9090:9090"
    volumes:
      - ./ops/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    depends_on:
      app:
        condition: service_started

  grafana:
    image: grafana/grafana:latest
    container_name: chatbi-grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_USERS_ALLOW_SIGN_UP: "false"
    volumes:
      - grafana-storage:/var/lib/grafana
    depends_on:
      prometheus:
        condition: service_started

volumes:
  pgdata:
  qdrant_storage:
  grafana-storage:
  ollama:
